---
- debug:
    msg: "{{TelegrafUserPass}}"
- debug:
    msg: "{{GrafanaUserPass}}"
- name: set variables
  set_fact:
    adminUser: "{{AdminUser}}"
    adminPass: "{{AdminPass}}"
    telegraf: "{{TelegrafUserPass}}"
    grafana: "{{GrafanaUserPass}}"
- name: update installed packages
  become: true
  yum:
    name: "*"
    state: latest
- name: install yum packages
  become: true
  yum:
    name: "{{ item.package }}"
    state: latest
  with_items:
    - { package: 'golang', notes: 'GO Language'}
    - { package: 'https://dl.influxdata.com/influxdb/releases/influxdb-1.3.5.x86_64.rpm', notes: 'InfluxDB' }
    - { package: 'https://dl.influxdata.com/telegraf/releases/telegraf-1.4.0-1.x86_64.rpm', notes: 'Telegraf' }
    - { package: 'https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.5.1-1.x86_64.rpm', notes: 'Grafana' }
- include: awscli-setup.yml
- name: start influxdb
  become: true
  service:
    name: influxdb
    state: started
- name: run influx configuration
  become: true
  command: "influx -execute {{item.command}}"
  with_items:
    - { command: "\"CREATE USER {{adminUser}} WITH PASSWORD '{{adminPass}}' WITH ALL PRIVILEGES\"" }
    - { command: "\"CREATE DATABASE telegraf_database\"" }
    - { command: "\"CREATE RETENTION POLICY six_month_only ON telegraf_database DURATION 26w REPLICATION 1 DEFAULT\"" }
    - { command: "\"CREATE USER telegraf WITH PASSWORD '{{telegraf}}'\"" }
    - { command: "\"GRANT ALL ON telegraf_database TO telegraf\"" }
    - { command: "\"CREATE USER grafana WITH PASSWORD '{{grafana}}'\"" }
    - { command: "\"GRANT READ ON telegraf_database TO grafana\"" }
- name: updated influx configuration
  become: true
  lineinfile:
    dest: /etc/influxdb/influxdb.conf
    regexp: '^  .? auth-enabled.*'
    line: '    auth-enabled = true'
    state: present
- name: restart influxdb
  become: true
  service:
    name: influxdb
    state: restarted
- name: check that influxdb is running
  become: true
  wait_for:
    host: localhost
    port: 8086
    delay: 5
    timeout: 320
    state: started
- name: updated telegraf configuration (1/3)
  become: true
  lineinfile:
    dest: /etc/telegraf/telegraf.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: '^#? ?\[\[inputs.statsd\]\]', line: '[[inputs.statsd]]', notes: 'Statsd Block' }
- name: updated telegraf configuration (2/3)
  become: true
  lineinfile:
    dest: /etc/telegraf/telegraf.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: '^.*\[\[inputs.statsd\]\]'
    state: present
  with_items:
    - { regexp: '^#? ? ? ?protocol = "udp"', line: '  protocol = "udp"', notes: 'Protocol (UDP) Setting' }
    - { regexp: '^#? ? ? ?service_address = ":8125"', line: '  service_address = ":8125"', notes: 'Service Address' }
- name: updated telegraf configuration (2/3)
  become: true
  lineinfile:
    dest: /etc/telegraf/telegraf.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: '^.*\[\[outputs.influxdb\]\]'
    state: present
  with_items:
    - { regexp: '^ ? ?database = "telegraf"', line: '  database = "telegraf_database"', notes: 'Database Setting' }
    - { regexp: '^ ? ?#? ?username = "telegraf"', line: '  username = "telegraf"', notes: 'Username' }
    - { regexp: '^ ? ?#? ?password = ".*"', line: '  password = "{{telegraf}}"', notes: 'Password' }
- name: start telegraf service
  become: true
  service:
    name: telegraf
    state: started
- name: start grafana server
  become: true
  service:
    name: grafana-server
    runlevel: 345
    enabled: true
- name: start grafana server
  become: true
  service:
    name: grafana-server
    state: started
- name: check that telegraf is running
  become: true
  wait_for:
    host: localhost
    port: 3000
    delay: 5
    timeout: 320
    state: started
