---
- name: set default value for instance_size
  set_fact:
    instance_size: t2.micro
- set_fact:
    instance_size: "{{ ec2size }}"
  when:
    - ec2size|default("") != ""
- name: set default value for server_count
  set_fact:
    server_count: 1
- set_fact:
    server_count: "{{ ec2count }}"
  when:
    - ec2count|default(1) != 1
- name: Create ec2 instance
  ec2:
    key_name: default-website
    profile: production
    group:
      - website-api-sg
      - build-travisci-sg
      - user-jreardon-sg
    instance_type: "{{ instance_size }}"
    image: ami-e0b67f9a
    vpc_subnet_id: subnet-533c2215
    region: us-east-1
    assign_public_ip: yes
    instance_profile_name: codedeploy-role
    instance_tags:
      Name: "{{ instanceName }}"
    wait: true
    count: "{{ server_count }}"
  register: result
- name: Add Name tag to the new instance(s)
  ec2_tag:
    region: "{{ item.region }}"
    resource: "{{ item.id }}"
    tags:
      Name: "{{ instanceName }}"
  with_items:
    - "{{ result.instances }}"
- name: Add passed tags to the new instance(s)
  ec2_tag:
    region: "{{ item.region }}"
    resource: "{{ item.id }}"
    tags:
      "{{ item.tagName }}": "{{ item.tagValue }}"
  with_items:
    - "{{ tags }}"
  when:
    - tags|default("") != ""
- name: Debug output of results
  debug:
    var: result.instances
- name: Add instance to host group
  add_host:
    hostname: "{{ item.private_ip }}"
    groupname: instances
  with_items:
    - "{{ result.instances }}"
- name: Wait for SSH
  wait_for:
    host: "{{ item.private_dns_name }}"
    port: 22
    delay: 60
    timeout: 320
    state: started
  with_items:
    - "{{ result.instances }}"
