---
- name: Terminate aws ec2 server
  become: false
  gather_facts: false
  hosts: localhost
  vars_prompt:
    - name: "hostName"
      prompt: "Enter the name of the instance"
      private: no
  tasks:
    - include: ec2-variables.yml
    - name: Gather facts
      ec2_remote_facts:
        filters:
          "tag:Name": "{{ hostName }}"
      register: result
      ec2_instance_facts:
        filters:
          "tag:Name": "{{ hostName }}"
      register: facts
    - name: Get server list
      set_fact:
        instances: "{{ result.instances }}"
    - name: Retag instances
      ec2_tag:
        region: "{{ item.region }}"
        resource: "{{ item.id }}"
        tags:
          Name: "TERMINATED-{{ item.tags.Name }}"
      with_items:
        - "{{ result.instances }}"
    - name: Terminating server instance
      ec2:
        region: "{{ item.region }}"
        instance_ids: "{{ item.id }}"
        state: absent
      with_items:
        - "{{ instances }}"
    - name: Create ec2 instance
      ec2:
        key_name: default-website
        profile: production
        group:
          - "{{ aws_ec2_group }}"
        instance_type: "{{ instance_size }}"
        image: "{{ item.image_id }}"
        vpc_subnet_id: "{{ aws_vpc_subnet_id }}"
        region: "{{ item.region }}"
        assign_public_ip: yes
        instance_profile_name: "{{ item.instance_profile }}"
        instance_tags:
          Name: "{{ hostName }}"
        wait: true
        count: 1
      register: result
    - name: Add Name tag to the new instance(s)
      ec2_tag:
        region: "{{ item.region }}"
        resource: "{{ item.id }}"
        tags:
          Name: "{{ hostName }}"
      with_items:
        - "{{ result.instances }}"
    - name: Debug output of results
      debug:
        var: result.instances
    - name: Add instance to host group (private)
      add_host:
        hostname: "{{ item.private_ip }}"
        groupname: instances
      with_items:
        - "{{ result.instances }}"
      when: use_public != true
    - name: Add instance to host group (public)
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: instances
      with_items:
        - "{{ result.instances }}"
      when: use_public == true
    - name: Wait for SSH
      wait_for:
        host: "{{ item.private_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items:
        - "{{ result.instances }}"
      when: use_public != true
    - name: Wait for SSH
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items:
        - "{{ result.instances }}"
      when: use_public == true
